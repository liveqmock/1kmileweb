<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<aop:aspectj-autoproxy />
	
	<!-- 配置组件扫描包路径 -->
	<context:component-scan base-package="com.yeahwell.epu" />
	
	 <!-- 上传文件时需要做的配置 -->  
<!--     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize" value="5000000"></property>
        <property name="maxInMemorySize" value="4096" />  
    	<property name="defaultEncoding" value="UTF-8" />  
    </bean> -->
	
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="zh_CN" />
	</bean>
	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="localeChangeInterceptor" />
			</list>
		</property>
	</bean>
	<bean id="yamlPersister" class="com.yeahwell.epu.web.util.i18n.YamlPropertiesPersister"></bean>
	<bean id="messageSource"
		class="com.yeahwell.epu.web.util.i18n.ModifiedReloadableResourceBundleMessageSource">
		<property name="basenames" value="/WEB-INF/i18n/common" />
		<property name="extensions" value=".yml" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="propertiesPersister" ref="yamlPersister" />
		<property name="cacheSeconds" value="1" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- <mvc:resources mapping="/static/**" location="/static/"/> -->
	
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>
	<!-- 解决springmvc的@ResponseBody的乱码问题 -->
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
			<constructor-arg value="UTF-8"/>
			<property name="supportedMediaTypes">
				<list>
					<value>text/html;charset=UTF-8</value>
					<value>text/plain;charset=UTF-8</value>
					<value>application/json;charset=UTF-8</value>
				</list>
			</property>
	</bean>
	<!-- 支持JSON数据的传输 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	</bean>
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
		<!-- 日期格式转换 -->
		<property name="webBindingInitializer">
			<bean class="com.yeahwell.epu.web.converter.DateConverter" />
		</property>
	</bean>
	
	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>
	<bean id="freemarkerConfig" class="com.yeahwell.epu.web.util.freemarker.HtmlFreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/" />
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
	</bean>
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="/WEB-INF/ftl/" />
		<property name="suffix" value=".html" />
		<property name="requestContextAttribute" value="request" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="order" value="1" />
	</bean>
	<bean id="viewsResolver2"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="/WEB-INF/html/" />
		<property name="suffix" value=".html" />
		<property name="requestContextAttribute" value="request" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="order" value="2" />
	</bean>
	
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<mvc:annotation-driven validator="validator" />

	<bean id="applicationContextProvider" class="com.yeahwell.epu.web.util.ApplicationContextProvider"></bean>

	<mvc:interceptors>
 		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.yeahwell.epu.web.interceptor.PrePostInterceptor">
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.yeahwell.epu.web.interceptor.LoggingInterceptor">
			</bean>
		</mvc:interceptor>
  		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.yeahwell.epu.web.interceptor.CheckLoginInterceptor">
				<property name="returnMerchantLoginURL" value="/merchant/login" />
				<property name="returnAdminLoginURL" value="/admin/login" />
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.yeahwell.epu.web.interceptor.EnterInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.yeahwell.epu.web.interceptor.i18nInterceptor">
				<property name="i18NFolder" value="/WEB-INF/i18n"/>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 过滤器 -->
	<!-- <bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" 
		/> <mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.MobileRedirectInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="com.pinganfu.pinganfuweb.interceptor.LoggingInterceptor"> </bean> 
		</mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.PrePostInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="com.pinganfu.pinganfuweb.interceptor.CookieInterceptor"> </bean> </mvc:interceptor> 
		<mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.CheckLoginInterceptor"> 
		<property name="returnLoginUrl" value="/session" /> <property name="returnMerchantLoginUrl" 
		value="/merchant/" /> </bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping 
		path="/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.CheckVerificationInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <mvc:exclude-mapping 
		path="/fundUserRegister/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.CheckMissingFieldsInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="com.pinganfu.pinganfuweb.interceptor.PasswordEncryptorInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="com.pinganfu.pinganfuweb.interceptor.CSRFInterceptor"> </bean> </mvc:interceptor> 
		<mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.SmsTemplateInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="com.pinganfu.pinganfuweb.interceptor.TransCodeInterceptor"> </bean> 
		</mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.api.interceptor.OAuthServiceInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="com.pinganfu.pinganfuweb.interceptor.AppendURIInterceptor"> </bean> 
		</mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.IsAdminInterceptor"> 
		</bean> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="com.pinganfu.pinganfuweb.interceptor.PermissionInterceptor"> </bean> 
		</mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.interceptor.i18nInterceptor"> 
		<property name="i18NFolder" value="/WEB-INF/i18n" /> </bean> </mvc:interceptor> 
		<mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.pinganfu.pinganfuweb.api.interceptor.APIInterceptors"> 
		</bean> </mvc:interceptor> -->
	<!-- 异常处理 -->
	<!-- <bean class="com.pinganfu.pinganfuweb.web.util.handler.PinganfuWebCommonExceptionResolver"> 
		</bean> -->
<!-- 	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				表示当抛出NumberFormatException的时候就返回名叫error/system_error的视图
				<prop key="NumberFormatException">error/error-numberformat</prop>
				<prop key="NullPointerException">error/error-nullpointer</prop>
			</props>
		</property>
		表示当抛出异常但没有在exceptionMappings里面找到对应的异常时 返回名叫error/error的视图
		<property name="defaultErrorView" value="error/error" />
		定义在发生异常时视图跟返回码的对应关系
		<property name="statusCodes">
			<props>
			    表示在发生NumberFormatException时返回视图error/system_error，然后这里定义发生异常时视图error/system_error对应的HttpServletResponse的返回码是500
				<prop key="error/error500">500</prop>
				<prop key="error/error503">503</prop>
				<prop key="error/error501">501</prop>
				<prop key="error/error404">404</prop>
				<prop key="error/error403">403</prop>
				<prop key="error/error401">401</prop>
				<prop key="error/error">500</prop>
			</props>
		</property>
	</bean> -->

	<!-- <bean name="requestDataValueProcessor" class="com.pinganfu.pinganfuweb.web.util.csrf.CSRFRequestDataValueProcessor" 
		/> <bean class="com.pinganfu.pinganfuweb.web.util.ResourceConfig"> <property 
		name="locations"> <list> <value>file:/config/crm/config.properties</value> 
		<value>classpath:/configInfo.properties</value> </list> </property> </bean> -->

</beans>